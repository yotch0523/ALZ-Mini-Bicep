name: Deploy - Deploy infrastructure with Bicep and Modules

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy.yml"
      - "**.bicep"
      - "**.bicepparam"
      - "!*.sample.*.bicepparam"
      - "ps-rule.yaml"
      - ".ps-rule/*"
      - "**/bicepconfig.json"

permissions:
  id-token: write
  contents: read

env:
  AZURE_DEPLOYMENT_REGION: 'japaneast'

jobs:
  deploy-resource-groups:
    name: Deploy Resource Groups
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Bicep CLI
        uses: actions/cache@v3
        id: cache-bicep
        with:
          path: ~/.bicep
          key: bicep-${{ runner.os }}-${{ hashFiles('**/bicep-linux-x64') }}

      - name: Install Bicep CLI if not cached
        if: steps.cache-bicep.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.bicep
          curl -Lo ~/.bicep/bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ~/.bicep/bicep
          echo "$HOME/.bicep" >> $GITHUB_PATH

      - name: Verify Bicep installation
        run: bicep --version

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy connectivity resource groups
        id: deploy_connectivity_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/Connectivity-RG.all.bicepparam
          deploymentName: deploy_Connectivity_RG
          failOnStdErr: false
      
      - name: Deploy identity resource groups
        id: deploy_identity_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/Identity-RG.all.bicepparam
          deploymentName: deploy_Identity_RG
          failOnStdErr: false

      - name: Deploy LandingZone01 resource groups
        id: deploy_landingzone01_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/LandingZone01-RG.all.bicepparam
          deploymentName: deploy_LandingZone01_RG
          failOnStdErr: false
      
      - name: Deploy Management resource groups
        id: deploy_management_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/Management-RG.all.bicepparam
          deploymentName: deploy_Management_RG
          failOnStdErr: false

  deploy-logging:
    needs: deploy-resource-groups
    name: Deploy logging
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Bicep CLI
        uses: actions/cache@v3
        with:
          path: ~/.bicep
          key: bicep-${{ runner.os }}-${{ hashFiles('**/bicep-linux-x64') }}

      - name: Check Bicep CLI cache hit
        run: |
          if [ -f ~/.bicep/bicep ]; then
            echo "Bicep CLI is cached."
            echo "$HOME/.bicep" >> $GITHUB_PATH
          else
            echo "Bicep CLI is not cached, installing..."
            mkdir -p ~/.bicep
            curl -Lo ~/.bicep/bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
            chmod +x ~/.bicep/bicep
            echo "$HOME/.bicep" >> $GITHUB_PATH
          fi

      - name: Verify Bicep installation
        run: bicep --version

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Deploy Management Logging resources
        id: deploy_management_logging
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Management-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/logging/logging.bicep
          parameters: infra-as-code/bicep/modules/logging/parameters/Management_logging.all.bicepparam
          deploymentName: deploy_Management_Logging
          failOnStdErr: false

  deploy-networkings:
    needs: deploy-resource-groups
    name: Deploy Networkings
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Bicep CLI
        uses: actions/cache@v3
        with:
          path: ~/.bicep
          key: bicep-${{ runner.os }}-${{ hashFiles('**/bicep-linux-x64') }}

      - name: Check Bicep CLI cache hit
        run: |
          if [ -f ~/.bicep/bicep ]; then
            echo "Bicep CLI is cached."
            echo "$HOME/.bicep" >> $GITHUB_PATH
          else
            echo "Bicep CLI is not cached, installing..."
            mkdir -p ~/.bicep
            curl -Lo ~/.bicep/bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
            chmod +x ~/.bicep/bicep
            echo "$HOME/.bicep" >> $GITHUB_PATH
          fi

      - name: Verify Bicep installation
        run: bicep --version

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy hub networking
        id: deploy_hub_networking
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Connectivity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          parameters: infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.all.bicepparam
          deploymentName: deploy_Hub_Networking
          failOnStdErr: false

      - name: Deploy Identity spoke networking
        id: deploy_identity_spoke_networking
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Identity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep
          parameters: infra-as-code/bicep/modules/spokeNetworking/parameters/Identity_spokeNetworking.all.bicepparam
          deploymentName: deploy_Identity_Spoke_Networking
          failOnStdErr: false

      - name: Deploy LandingZone01 spoke networking
        id: deploy_landingzone01_spoke_networking
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-LandingZone01-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep
          parameters: infra-as-code/bicep/modules/spokeNetworking/parameters/LandingZone01_spokeNetworking.all.bicepparam
          deploymentName: deploy_LandingZone01_Spoke_Networking
          failOnStdErr: false

  deploy-peerings:
    needs: deploy-networkings
    name: Deploy Peerings
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Bicep CLI
        uses: actions/cache@v3
        with:
          path: ~/.bicep
          key: bicep-${{ runner.os }}-${{ hashFiles('**/bicep-linux-x64') }}

      - name: Check Bicep CLI cache hit
        run: |
          if [ -f ~/.bicep/bicep ]; then
            echo "Bicep CLI is cached."
            echo "$HOME/.bicep" >> $GITHUB_PATH
          else
            echo "Bicep CLI is not cached, installing..."
            mkdir -p ~/.bicep
            curl -Lo ~/.bicep/bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
            chmod +x ~/.bicep/bicep
            echo "$HOME/.bicep" >> $GITHUB_PATH
          fi

      - name: Verify Bicep installation
        run: bicep --version

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Connectivity-Identity peering
        id: deploy_connectivity_identity_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Connectivity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/Connectivity-Identity_vnetPeering.all.bicepparam
          deploymentName: deploy_Connectivity_Identity_Peering
          failOnStdErr: false
      
      - name: Deploy Connectivity-LandingZone01 peering
        id: deploy_connectivity_landingzone01_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Connectivity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/Connectivity-LandingZone01_vnetPeering.all.bicepparam
          deploymentName: deploy_Connectivity_LandingZone01_Peering
          failOnStdErr: false

      - name: Deploy Identity-Connectivity peering
        id: deploy_identity_connectivity_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Identity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/Identity-Connectivity_vnetPeering.all.bicepparam
          deploymentName: deploy_Identity_Connectivity_Peering
          failOnStdErr: false

      - name: Deploy LandingZone01-Connectivity peering
        id: deploy_landingzone01_connectivity_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-LandingZone01-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/LandingZone01-Connectivity_vnetPeering.all.bicepparam
          deploymentName: deploy_LandingZone01_Connectivity_Peering
          failOnStdErr: false

  deploy-diagnostics-settings:
    needs: deploy-logging
    name: Deploy Bicep templates of diagnostics settings
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Bicep CLI
        uses: actions/cache@v3
        with:
          path: ~/.bicep
          key: bicep-${{ runner.os }}-${{ hashFiles('**/bicep-linux-x64') }}

      - name: Check Bicep CLI cache hit
        run: |
          if [ -f ~/.bicep/bicep ]; then
            echo "Bicep CLI is cached."
            echo "$HOME/.bicep" >> $GITHUB_PATH
          else
            echo "Bicep CLI is not cached, installing..."
            mkdir -p ~/.bicep
            curl -Lo ~/.bicep/bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
            chmod +x ~/.bicep/bicep
            echo "$HOME/.bicep" >> $GITHUB_PATH
          fi

      - name: Verify Bicep installation
        run: bicep --version

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Diagnostics Settings resources
        id: deploy_diagnostics_settings
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ secrets.AZURE_ROOT_MANAGEMENT_GROUP_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/mgDiagSettings/mgDiagSettings.bicep
          parameters: infra-as-code/bicep/modules/mgDiagSettings/parameters/mgDiagSettings.all.bicepparam
          deploymentName: deploy_Diagnostics_Settings
          failOnStdErr: false