name: Deploy - Deploy infrastructure with Bicep and Modules

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy.yml"
      - "**.bicep"
      - "ps-rule.yaml"
      - ".ps-rule/*"
      - "**/bicepconfig.json"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List Currently Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Currently installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Install latest version of Bicep
        shell: sh
        run: |
          # From https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/install#linux
          # Fetch the latest Bicep CLI binary
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
      
      - name: List Now Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Now installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate templates
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Filter '*.bicep' -Exclude '.\infra-as-code\bicep\CRML\*','callModuleFromACR.example.bicep','orchHubSpoke.bicep', '' | ForEach-Object {
            Write-Information "==> Attempting Bicep Deploy For File: $_" -InformationAction Continue
            $bicepTemplate = $_.FullName
            $parametersDirectory = "$_.DirectoryName\parameters"
            Get-ChildItem -Path $parametersDirectory -Recurse -Filter '*.bicepparam' -Exclude *.sample.*.bicepparam | ForEach-Object {
              Write-Information "==> Attempting Bicep Validate For File: $bicepTemplate | Paramters: $_" -InformationAction Continue
              $bicepParameters = $_.FullName
              $bicepOutput = az deployment sub validate --template-file $bicepTemplate --parameters @$bicepParameters 2>&1
              if ($LastExitCode -ne 0)
              {
                foreach ($item in $bicepOutput) {
                  $output += "$($item) `r`n"
                }
              }
              Else
              {
                echo "Bicep Build Successful for File: $bicepTemplate"
              }
            }
          }

      - name: Deploy all Bicep templates
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Filter '*.bicep' -Exclude '.\infra-as-code\bicep\CRML\*','callModuleFromACR.example.bicep','orchHubSpoke.bicep', '' | ForEach-Object {
            Write-Information "==> Attempting Bicep Deploy For File: $_" -InformationAction Continue
            $bicepTemplate = $_.FullName
            $parametersDirectory = "$_.DirectoryName\parameters"
            Get-ChildItem -Path $parametersDirectory -Recurse -Filter '*.bicepparam' -Exclude *.sample.*.bicepparam | ForEach-Object {
              Write-Information "==> Attempting Bicep Deploy For File: $bicepTemplate | Paramters: $_" -InformationAction Continue
              $bicepParameters = $_.FullName
              $bicepOutput = az deployment sub create --template-file $bicepTemplate --parameters @$bicepParameters 2>&1
              if ($LastExitCode -ne 0)
              {
                foreach ($item in $bicepOutput) {
                  $output += "$($item) `r`n"
                }
              }
              Else
              {
                echo "Bicep Build Successful for File: $bicepTemplate"
              }
            }
          }
