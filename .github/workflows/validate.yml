name: Validation - Bicep Files and Modules

on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/validate.yml"
      - "**.bicep"
      - "**.bicepparam"
      - "!*.sample.*.bicepparam"
      - "ps-rule.yaml"
      - ".ps-rule/*"
      - "**/bicepconfig.json"

permissions:
  id-token: write
  contents: read

env:
  AZURE_DEPLOYMENT_REGION: 'japaneast'

jobs:
  validate-resource-groups:
    name: Validate Bicep templates of Resource Groups
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List Currently Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Currently installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Install latest version of Bicep
        shell: sh
        run: |
          # From https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/install#linux
          # Fetch the latest Bicep CLI binary
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64

      - name: List Now Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Now installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate connectivity resource groups
        id: validate_connectivity_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/Connectivity-RG.all.bicepparam
          deploymentName: validate_Connectivity_RG
          failOnStdErr: false
          deploymentMode: Validate

      - name: Validate identity resource groups
        id: validate_identity_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/Identity-RG.all.bicepparam
          deploymentName: validate_Identity_RG
          failOnStdErr: false
          deploymentMode: Validate

      - name: Validate LandingZone01 resource groups
        id: validate_landingzone01_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/LandingZone01-RG.all.bicepparam
          deploymentName: validate_LandingZone01_RG
          failOnStdErr: false
          deploymentMode: Validate
      
      - name: Validate Management resource groups
        id: validate_management_rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: infra-as-code/bicep/modules/resourceGroup/parameters/Management-RG.all.bicepparam
          deploymentName: validate_Management_RG
          failOnStdErr: false
          deploymentMode: Validate

  validate-logging:
    needs: validate-resource-groups
    name: Validate Bicep templates of logging
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List Currently Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Currently installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Install latest version of Bicep
        shell: sh
        run: |
          # From https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/install#linux
          # Fetch the latest Bicep CLI binary
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64

      - name: List Now Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Now installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate Management Logging resources
        id: validate_management_logging
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Management-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/logging/logging.bicep
          parameters: infra-as-code/bicep/modules/logging/parameters/Management_logging.all.bicepparam
          deploymentName: validate_Management_Logging
          failOnStdErr: false
          deploymentMode: Validate

  validate-networkings:
    needs: validate-resource-groups
    name: Validate Bicep templates of networkings
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List Currently Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Currently installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Install latest version of Bicep
        shell: sh
        run: |
          # From https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/install#linux
          # Fetch the latest Bicep CLI binary
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64

      - name: List Now Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Now installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate hub networking
        id: validate_hub_networking
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Connectivity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          parameters: infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.all.bicepparam
          deploymentName: validate_Hub_Networking
          failOnStdErr: false
          deploymentMode: Validate

      - name: Validate Identity spoke networking
        id: validate_identity_spoke_networking
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Identity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep
          parameters: infra-as-code/bicep/modules/spokeNetworking/parameters/Identity_spokeNetworking.all.bicepparam
          deploymentName: validate_Identity_Spoke_Networking
          failOnStdErr: false
          deploymentMode: Validate

      - name: Validate LandingZone01 spoke networking
        id: validate_landingzone01_spoke_networking
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-LandingZone01-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep
          parameters: infra-as-code/bicep/modules/spokeNetworking/parameters/LandingZone01_spokeNetworking.all.bicepparam
          deploymentName: validate_LandingZone01_Spoke_Networking
          failOnStdErr: false
          deploymentMode: Validate

  validate-peerings:
    needs: validate-networkings
    name: Validate Bicep templates of peerings
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List Currently Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Currently installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Install latest version of Bicep
        shell: sh
        run: |
          # From https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/install#linux
          # Fetch the latest Bicep CLI binary
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64

      - name: List Now Installed Bicep Version
        shell: pwsh
        run: |
          $bicepVersion = bicep --version
          Write-Information "=====> Now installed Bicep version is: $bicepVersion <=====" -InformationAction Continue

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate Connectivity-Identity peering
        id: validate_connectivity_identity_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Connectivity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/Connectivity-Identity_vnetPeering.all.bicepparam
          deploymentName: validate_Connectivity_Identity_Peering
          failOnStdErr: false
          deploymentMode: Validate
      
      - name: Validate Connectivity-LandingZone01 peering
        id: validate_connectivity_landingzone01_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Connectivity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/Connectivity-LandingZone01_vnetPeering.all.bicepparam
          deploymentName: validate_Connectivity_LandingZone01_Peering
          failOnStdErr: false
          deploymentMode: Validate

      - name: Validate Identity-Connectivity peering
        id: validate_identity_connectivity_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-Identity-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/Identity-Connectivity_vnetPeering.all.bicepparam
          deploymentName: validate_Identity_Connectivity_Peering
          failOnStdErr: false
          deploymentMode: Validate

      - name: Validate LandingZone01-Connectivity peering
        id: validate_landingzone01_connectivity_peering
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ALZ-LandingZone01-RG
          region: ${{ env.AZURE_DEPLOYMENT_REGION }}
          template: infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep
          parameters: infra-as-code/bicep/modules/vnetPeering/parameters/LandingZone01-Connectivity_vnetPeering.all.bicepparam
          deploymentName: validate_LandingZone01_Connectivity_Peering
          failOnStdErr: false
          deploymentMode: Validate

  azure_waf:
    name: Test Azure Well-Architected Framework (PSRule)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Add pipeline tests for Azure Well-Architected Framework.
      # See https://aka.ms/ps-rule-action for configuration options.
      - name: Run PSRule analysis
        uses: Microsoft/ps-rule@v2
        with:
          modules: PSRule.Rules.Azure
          baseline: Azure.Preview
        continue-on-error: true

  all-jobs-success:
    needs: [
      validate-resource-groups,
      validate-logging,
      validate-networkings,
      validate-peerings,
      azure_waf
    ]
    name: All jobs are successful
    runs-on: ubuntu-latest

    steps:
      - name: All jobs are successful
        run: echo "All jobs are successful"